<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20203.20.0801.1333                               -->
<workbook original-version='18.1' source-build='2020.3.0 (20203.20.0801.1333)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='covid_19_cases' inline='true' name='federated.13ef01c1kr7l2a10t4zdl1km4f3h' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='covid_19_cases' name='textscan.1owco611ung8gs16dzb980cf0za7'>
            <connection class='textscan' directory='C:/Users/Anubhuti Singh/Desktop/tableau projects/Covid-19(world)/covid-19-data-resource-hub-covid-19-case-counts/data' filename='covid_19_cases.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.1owco611ung8gs16dzb980cf0za7' name='covid_19_activity.csv' table='[covid_19_activity#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='people_positive_cases_count' ordinal='0' />
            <column datatype='string' name='county_name' ordinal='1' />
            <column datatype='string' name='province_state_name' ordinal='2' />
            <column datatype='date' name='report_date' ordinal='3' />
            <column datatype='string' name='continent_name' ordinal='4' />
            <column datatype='string' name='data_source_name' ordinal='5' />
            <column datatype='integer' name='people_death_new_count' ordinal='6' />
            <column datatype='string' name='county_fips_number' ordinal='7' />
            <column datatype='string' name='country_alpha_3_code' ordinal='8' />
            <column datatype='string' name='country_short_name' ordinal='9' />
            <column datatype='string' name='country_alpha_2_code' ordinal='10' />
            <column datatype='integer' name='people_positive_new_cases_count' ordinal='11' />
            <column datatype='integer' name='people_death_count' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.1owco611ung8gs16dzb980cf0za7' name='covid_19_cases.csv' table='[covid_19_cases#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='case_type' ordinal='0' />
              <column datatype='string' name='people_total_tested_count' ordinal='1' />
              <column datatype='integer' name='cases' ordinal='2' />
              <column datatype='integer' name='difference' ordinal='3' />
              <column datatype='date' name='date' ordinal='4' />
              <column datatype='string' name='combined_key' ordinal='5' />
              <column datatype='string' name='country_region' ordinal='6' />
              <column datatype='string' name='province_state' ordinal='7' />
              <column datatype='string' name='admin2' ordinal='8' />
              <column datatype='string' name='iso2' ordinal='9' />
              <column datatype='string' name='iso3' ordinal='10' />
              <column datatype='string' name='fips' ordinal='11' />
              <column datatype='real' name='lat' ordinal='12' />
              <column datatype='real' name='long' ordinal='13' />
              <column datatype='integer' name='population_count' ordinal='14' />
              <column datatype='string' name='people_hospitalized_cumulative_count' ordinal='15' />
              <column datatype='string' name='data_source' ordinal='16' />
              <column datatype='datetime' name='prep_flow_runtime' ordinal='17' />
            </columns>
          </relation>
          <relation connection='textscan.1owco611ung8gs16dzb980cf0za7' name='covid_19_activity.csv' table='[covid_19_activity#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='people_positive_cases_count' ordinal='0' />
              <column datatype='string' name='county_name' ordinal='1' />
              <column datatype='string' name='province_state_name' ordinal='2' />
              <column datatype='date' name='report_date' ordinal='3' />
              <column datatype='string' name='continent_name' ordinal='4' />
              <column datatype='string' name='data_source_name' ordinal='5' />
              <column datatype='integer' name='people_death_new_count' ordinal='6' />
              <column datatype='string' name='county_fips_number' ordinal='7' />
              <column datatype='string' name='country_alpha_3_code' ordinal='8' />
              <column datatype='string' name='country_short_name' ordinal='9' />
              <column datatype='string' name='country_alpha_2_code' ordinal='10' />
              <column datatype='integer' name='people_positive_new_cases_count' ordinal='11' />
              <column datatype='integer' name='people_death_count' ordinal='12' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[covid_19_activity.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>case_type</remote-name>
            <remote-type>129</remote-type>
            <local-name>[case_type]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>case_type</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_total_tested_count</remote-name>
            <remote-type>129</remote-type>
            <local-name>[people_total_tested_count]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>people_total_tested_count</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>cases</remote-name>
            <remote-type>20</remote-type>
            <local-name>[cases]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>cases</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>difference</remote-name>
            <remote-type>20</remote-type>
            <local-name>[difference]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>difference</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[date]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>date</remote-alias>
            <ordinal>4</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>combined_key</remote-name>
            <remote-type>129</remote-type>
            <local-name>[combined_key]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>combined_key</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_region</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_region]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>country_region</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province_state</remote-name>
            <remote-type>129</remote-type>
            <local-name>[province_state]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>province_state</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>admin2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[admin2]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>admin2</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso2</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso2]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>iso2</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>iso3</remote-name>
            <remote-type>129</remote-type>
            <local-name>[iso3]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>iso3</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>fips</remote-name>
            <remote-type>129</remote-type>
            <local-name>[fips]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>fips</remote-alias>
            <ordinal>11</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>lat</remote-name>
            <remote-type>5</remote-type>
            <local-name>[lat]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>lat</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>long</remote-name>
            <remote-type>5</remote-type>
            <local-name>[long]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>long</remote-alias>
            <ordinal>13</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>population_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[population_count]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>population_count</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_hospitalized_cumulative_count</remote-name>
            <remote-type>129</remote-type>
            <local-name>[people_hospitalized_cumulative_count]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>people_hospitalized_cumulative_count</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_source</remote-name>
            <remote-type>129</remote-type>
            <local-name>[data_source]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>data_source</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>prep_flow_runtime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[prep_flow_runtime]</local-name>
            <parent-name>[covid_19_cases.csv]</parent-name>
            <remote-alias>prep_flow_runtime</remote-alias>
            <ordinal>17</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_positive_cases_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_positive_cases_count]</local-name>
            <parent-name>[covid_19_activity.csv]</parent-name>
            <remote-alias>people_positive_cases_count</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_activity.csv_2659243D12F044619C28E1E43BFF065C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_name]</local-name>
            <parent-name>[covid_19_activity.csv]</parent-name>
            <remote-alias>county_name</remote-alias>
            <ordinal>19</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_activity.csv_2659243D12F044619C28E1E43BFF065C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>province_state_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[province_state_name]</local-name>
            <parent-name>[covid_19_activity.csv]</parent-name>
            <remote-alias>province_state_name</remote-alias>
            <ordinal>20</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_activity.csv_2659243D12F044619C28E1E43BFF065C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>report_date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[report_date]</local-name>
            <parent-name>[covid_19_activity.csv]</parent-name>
            <remote-alias>report_date</remote-alias>
            <ordinal>21</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_activity.csv_2659243D12F044619C28E1E43BFF065C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>continent_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[continent_name]</local-name>
            <parent-name>[covid_19_activity.csv]</parent-name>
            <remote-alias>continent_name</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_activity.csv_2659243D12F044619C28E1E43BFF065C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data_source_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[data_source_name]</local-name>
            <parent-name>[covid_19_activity.csv]</parent-name>
            <remote-alias>data_source_name</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_activity.csv_2659243D12F044619C28E1E43BFF065C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_death_new_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_death_new_count]</local-name>
            <parent-name>[covid_19_activity.csv]</parent-name>
            <remote-alias>people_death_new_count</remote-alias>
            <ordinal>24</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_activity.csv_2659243D12F044619C28E1E43BFF065C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>county_fips_number</remote-name>
            <remote-type>129</remote-type>
            <local-name>[county_fips_number]</local-name>
            <parent-name>[covid_19_activity.csv]</parent-name>
            <remote-alias>county_fips_number</remote-alias>
            <ordinal>25</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <approx-count>1</approx-count>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_activity.csv_2659243D12F044619C28E1E43BFF065C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_alpha_3_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_alpha_3_code]</local-name>
            <parent-name>[covid_19_activity.csv]</parent-name>
            <remote-alias>country_alpha_3_code</remote-alias>
            <ordinal>26</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_activity.csv_2659243D12F044619C28E1E43BFF065C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_short_name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_short_name]</local-name>
            <parent-name>[covid_19_activity.csv]</parent-name>
            <remote-alias>country_short_name</remote-alias>
            <ordinal>27</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_activity.csv_2659243D12F044619C28E1E43BFF065C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>country_alpha_2_code</remote-name>
            <remote-type>129</remote-type>
            <local-name>[country_alpha_2_code]</local-name>
            <parent-name>[covid_19_activity.csv]</parent-name>
            <remote-alias>country_alpha_2_code</remote-alias>
            <ordinal>28</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_activity.csv_2659243D12F044619C28E1E43BFF065C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_positive_new_cases_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_positive_new_cases_count]</local-name>
            <parent-name>[covid_19_activity.csv]</parent-name>
            <remote-alias>people_positive_new_cases_count</remote-alias>
            <ordinal>29</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_activity.csv_2659243D12F044619C28E1E43BFF065C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>people_death_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[people_death_count]</local-name>
            <parent-name>[covid_19_activity.csv]</parent-name>
            <remote-alias>people_death_count</remote-alias>
            <ordinal>30</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[covid_19_activity.csv_2659243D12F044619C28E1E43BFF065C]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Rank' datatype='integer' name='[Calculation_688487818711408640]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='RANK_UNIQUE(SUM([cases]),&apos;desc&apos; )'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Label_in' datatype='integer' name='[Calculation_688487818716680194]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='0' />
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='covid_19_activity.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_activity.csv_2659243D12F044619C28E1E43BFF065C]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='covid_19_cases.csv' datatype='table' name='[__tableau_internal_object_id__].[covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7]' role='measure' type='quantitative' />
      <column caption='Admin2' datatype='string' name='[admin2]' role='dimension' type='nominal' />
      <column caption='Case Type' datatype='string' name='[case_type]' role='dimension' type='nominal' />
      <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
      <column caption='Combined Key' datatype='string' name='[combined_key]' role='dimension' type='nominal' />
      <column caption='Continent Name' datatype='string' name='[continent_name]' role='dimension' type='nominal' />
      <column caption='Country Alpha 2 Code' datatype='string' name='[country_alpha_2_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Alpha 3 Code' datatype='string' name='[country_alpha_3_code]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Region' datatype='string' name='[country_region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='Country Short Name' datatype='string' name='[country_short_name]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column caption='County Fips Number' datatype='string' name='[county_fips_number]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='County Name' datatype='string' name='[county_name]' role='dimension' semantic-role='[County].[Name]' type='nominal' />
      <column caption='Data Source' datatype='string' name='[data_source]' role='dimension' type='nominal' />
      <column caption='Data Source Name' datatype='string' name='[data_source_name]' role='dimension' type='nominal' />
      <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
      <column caption='Difference' datatype='integer' name='[difference]' role='measure' type='quantitative' />
      <column caption='Fips' datatype='string' name='[fips]' role='dimension' type='nominal' />
      <column caption='Iso2' datatype='string' name='[iso2]' role='dimension' type='nominal' />
      <column caption='Iso3' datatype='string' name='[iso3]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Lat' datatype='real' name='[lat]' role='measure' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Long' datatype='real' name='[long]' role='measure' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='People Death Count' datatype='integer' name='[people_death_count]' role='measure' type='quantitative' />
      <column caption='People Death New Count' datatype='integer' name='[people_death_new_count]' role='measure' type='quantitative' />
      <column caption='People Hospitalized Cumulative Count' datatype='string' name='[people_hospitalized_cumulative_count]' role='dimension' type='nominal' />
      <column caption='People Positive Cases Count' datatype='integer' name='[people_positive_cases_count]' role='measure' type='quantitative' />
      <column caption='People Positive New Cases Count' datatype='integer' name='[people_positive_new_cases_count]' role='measure' type='quantitative' />
      <column caption='People Total Tested Count' datatype='string' name='[people_total_tested_count]' role='dimension' type='nominal' />
      <column caption='Population Count' datatype='integer' name='[population_count]' role='measure' type='quantitative' />
      <column caption='Prep Flow Runtime' datatype='datetime' name='[prep_flow_runtime]' role='dimension' type='ordinal' />
      <column caption='Province State' datatype='string' name='[province_state]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Province State Name' datatype='string' name='[province_state_name]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Report Date' datatype='date' name='[report_date]' role='dimension' type='ordinal' />
      <column-instance column='[country_region]' derivation='None' name='[none:country_region:nk]' pivot='key' type='nominal' />
      <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Country Region,DAY(Date))' hidden='true' name='[Action (Country Region,DAY(Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[country_region]' />
          <groupfilter function='level-members' level='[tdy:date:ok]' />
        </groupfilter>
      </group>
      <drill-paths>
        <drill-path name='country_region, province_state'>
          <field>[country_region]</field>
          <field>[province_state]</field>
        </drill-path>
      </drill-paths>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:country_region:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Australia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Burundi&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Greece&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Jordan&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Mali&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Oman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Serbia&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Timor-Leste&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Bolivia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Congo (Kinshasa)&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Fiji&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Indonesia&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Libya&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Rwanda&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Venezuela&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Angola&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Brunei&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Cruise Ship&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gambia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Israel&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Madagascar&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Niger&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;San Marino&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Yemen&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Canada&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Ecuador&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Guinea-Bissau&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Kosovo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Paraguay&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Slovakia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Austria&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cabo Verde&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Djibouti&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Grenada&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Kazakhstan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Malta&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pakistan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Togo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Antigua and Barbuda&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bulgaria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cuba&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Italy&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Malawi&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nigeria&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sao Tome and Principe&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Tajikistan&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Zambia&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Benin&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Comoros&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Eswatini&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Iceland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Mozambique&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Romania&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;US&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Albania&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bosnia and Herzegovina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Costa Rica&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Finland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Iran&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Liechtenstein&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;China&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Eritrea&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Honduras&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Latvia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Montenegro&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;South Sudan&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Argentina&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Burkina Faso&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cyprus&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Germany&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Jamaica&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;North Macedonia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Tanzania&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Zimbabwe&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Bangladesh&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Central African Republic&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Egypt&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Guyana&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Moldova&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Peru&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Slovenia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Uganda&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Barbados&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Chad&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;El Salvador&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Haiti&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kyrgyzstan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Monaco&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Somalia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ukraine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Belize&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Colombia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Estonia&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hungary&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Morocco&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Qatar&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Spain&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Uruguay&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Congo (Brazzaville)&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Ethiopia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;India&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Liberia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Namibia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Russia&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Sudan&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Uzbekistan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Azerbaijan&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Dominica&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Guatemala&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Kenya&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mauritania&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Panama&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Sierra Leone&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Trinidad and Tobago&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Armenia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Burma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Czechia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Ghana&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Japan&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Maldives&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Norway&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Senegal&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Algeria&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Botswana&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cote d&apos;Ivoire&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;France&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Iraq&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lithuania&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;New Zealand&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Saint Lucia&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;West Bank and Gaza&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belarus&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Chile&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Equatorial Guinea&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Laos&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mongolia&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Poland&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;South Africa&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bahamas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Cameroon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Dominican Republic&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Mauritius&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tunisia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Andorra&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Croatia&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gabon&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Ireland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Luxembourg&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nicaragua&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Syria&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:country_region:nk]&#10;[:Measure Names]' type='palette'>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Afghanistan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Australia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;India&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Lesotho&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Philippines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_blue_10_0'>
              <bucket>&quot;Spain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Cambodia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Italy&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Malaysia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Peru&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_brown_10_0'>
              <bucket>&quot;Portugal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;China&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Holy See&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Japan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Saudi Arabia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gold_10_0'>
              <bucket>&quot;Sri Lanka&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Austria&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Bhutan&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Cruise Ship&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Russia&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_gray_10_0'>
              <bucket>&quot;Switzerland&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Chile&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Denmark&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Kuwait&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Papua New Guinea&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_green_10_0'>
              <bucket>&quot;Turkey&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Albania&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Iran&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Mexico&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Nepal&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Norway&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;US&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_orange_10_0'>
              <bucket>&quot;Western Sahara&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Brazil&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Canada&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Netherlands&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Suriname&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_pink_10_0'>
              <bucket>&quot;Thailand&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Bahrain&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Belgium&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Saint Vincent and the Grenadines&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;Sweden&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_purple_10_0'>
              <bucket>&quot;United Kingdom&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Germany&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Saint Kitts and Nevis&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Singapore&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;Taiwan*&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_red_10_0'>
              <bucket>&quot;United Arab Emirates&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;France&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Korea, South&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Seychelles&quot;</bucket>
            </map-pri>
            <map-pri to='multiordinal_teal_10_0'>
              <bucket>&quot;Vietnam&quot;</bucket>
            </map-pri>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='covid_19_activity.csv' id='covid_19_activity.csv_2659243D12F044619C28E1E43BFF065C'>
            <properties context=''>
              <relation connection='textscan.1owco611ung8gs16dzb980cf0za7' name='covid_19_activity.csv' table='[covid_19_activity#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='people_positive_cases_count' ordinal='0' />
                  <column datatype='string' name='county_name' ordinal='1' />
                  <column datatype='string' name='province_state_name' ordinal='2' />
                  <column datatype='date' name='report_date' ordinal='3' />
                  <column datatype='string' name='continent_name' ordinal='4' />
                  <column datatype='string' name='data_source_name' ordinal='5' />
                  <column datatype='integer' name='people_death_new_count' ordinal='6' />
                  <column datatype='string' name='county_fips_number' ordinal='7' />
                  <column datatype='string' name='country_alpha_3_code' ordinal='8' />
                  <column datatype='string' name='country_short_name' ordinal='9' />
                  <column datatype='string' name='country_alpha_2_code' ordinal='10' />
                  <column datatype='integer' name='people_positive_new_cases_count' ordinal='11' />
                  <column datatype='integer' name='people_death_count' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='covid_19_cases.csv' id='covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7'>
            <properties context=''>
              <relation connection='textscan.1owco611ung8gs16dzb980cf0za7' name='covid_19_cases.csv' table='[covid_19_cases#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='case_type' ordinal='0' />
                  <column datatype='string' name='people_total_tested_count' ordinal='1' />
                  <column datatype='integer' name='cases' ordinal='2' />
                  <column datatype='integer' name='difference' ordinal='3' />
                  <column datatype='date' name='date' ordinal='4' />
                  <column datatype='string' name='combined_key' ordinal='5' />
                  <column datatype='string' name='country_region' ordinal='6' />
                  <column datatype='string' name='province_state' ordinal='7' />
                  <column datatype='string' name='admin2' ordinal='8' />
                  <column datatype='string' name='iso2' ordinal='9' />
                  <column datatype='string' name='iso3' ordinal='10' />
                  <column datatype='string' name='fips' ordinal='11' />
                  <column datatype='real' name='lat' ordinal='12' />
                  <column datatype='real' name='long' ordinal='13' />
                  <column datatype='integer' name='population_count' ordinal='14' />
                  <column datatype='string' name='people_hospitalized_cumulative_count' ordinal='15' />
                  <column datatype='string' name='data_source' ordinal='16' />
                  <column datatype='datetime' name='prep_flow_runtime' ordinal='17' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[iso3]' />
              <expression op='[country_alpha_3_code]' />
            </expression>
            <first-end-point object-id='covid_19_cases.csv_6D00AE75F6114BABB2E94DE48B8606C7' />
            <second-end-point object-id='covid_19_activity.csv_2659243D12F044619C28E1E43BFF065C' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Covid-19(Cases)' type='sheet' worksheet='Corona Active Cases Bar Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Covid-19(Cases)' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Corona Active Cases Bar Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt; </run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_cases' name='federated.13ef01c1kr7l2a10t4zdl1km4f3h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13ef01c1kr7l2a10t4zdl1km4f3h'>
            <column caption='Rank' datatype='integer' name='[Calculation_688487818711408640]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='RANK_UNIQUE(SUM([cases]),&apos;desc&apos; )'>
                <table-calc ordering-type='Rows' />
              </calculation>
            </column>
            <column caption='Label_in' datatype='integer' name='[Calculation_688487818716680194]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='0' />
            </column>
            <column caption='Case Type' datatype='string' name='[case_type]' role='dimension' type='nominal' />
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Country Region' datatype='string' name='[country_region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[case_type]' derivation='None' name='[none:case_type:nk]' pivot='key' type='nominal' />
            <column-instance column='[country_region]' derivation='None' name='[none:country_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_688487818716680194]' derivation='Sum' name='[sum:Calculation_688487818716680194:qk]' pivot='key' type='quantitative' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
            <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_688487818711408640]' derivation='User' name='[usr:Calculation_688487818711408640:ok:2]' pivot='key' type='ordinal'>
              <table-calc ordering-field='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[country_region]' ordering-type='Field' />
            </column-instance>
            <column-instance column='[Calculation_688487818711408640]' derivation='User' name='[usr:Calculation_688487818711408640:qk:3]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[country_region]' ordering-type='Field' />
            </column-instance>
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:case_type:nk]'>
            <groupfilter function='member' level='[none:case_type:nk]' member='&quot;Confirmed&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <computed-sort column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:country_region:nk]' direction='ASC' using='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk]' />
          <filter class='categorical' column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[tdy:date:ok]'>
            <groupfilter function='member' level='[tdy:date:ok]' member='#2020-05-17 00:00:00#' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='quantitative' column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[usr:Calculation_688487818711408640:qk:3]' included-values='in-range'>
            <min>1</min>
            <max>10</max>
          </filter>
          <slices>
            <column>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:case_type:nk]</column>
            <column>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[usr:Calculation_688487818711408640:qk:3]</column>
            <column>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[tdy:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='height' field='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk]' value='41' />
            <encoding attr='space' class='0' field='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:Calculation_688487818716680194:qk]' field-type='quantitative' fold='true' scope='cols' synchronized='true' type='space' />
            <format attr='display' class='0' field='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:Calculation_688487818716680194:qk]' scope='cols' value='false' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='height' field='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[usr:Calculation_688487818711408640:ok:2]' value='42' />
          </style-rule>
          <style-rule element='label'>
            <format attr='display' field='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[usr:Calculation_688487818711408640:ok:2]' value='false' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='size-bar' field='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk]' field-type='quantitative' max-size='1' min-size='0.005' type='centersize' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:country_region:nk]' />
              <color column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:country_region:nk]' />
              <color column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:Calculation_688487818716680194:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:country_region:nk]' />
              <color column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[:Measure Names]' />
              <text column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:country_region:nk]' />
              <text column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true'>&lt;</run>
                <run bold='true'>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk]</run>
                <run bold='true'>&gt;    &lt;</run>
                <run bold='true'>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:country_region:nk]</run>
                <run bold='true'>&gt;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[usr:Calculation_688487818711408640:ok:2]</rows>
        <cols>([federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk] + [federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:Calculation_688487818716680194:qk])</cols>
        <pages>
          <column>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[tdy:date:ok]</column>
        </pages>
        <annotations>
          <annotation class='area' id='0' text-pinx='0.5' text-piny='0.5' text-width-delta='-18'>
            <formatted-text>
              <run bold='true' fontsize='16'>&lt;Page Name&gt;</run>
            </formatted-text>
            <top-left>
              <visual-coordinate class='axis'>
                <x-coord axis-value='1772467.7334360552'>
                  <node-reference>
                    <axis>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.477612'>
                  <node-reference>
                    <fields>
                      <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[usr:Calculation_688487818711408640:ok:2]</field>
                    </fields>
                    <multibucket>
                      <bucket>5</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[tdy:date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>#2020-01-22 00:00:00#</bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </top-left>
            <bottom-right>
              <visual-coordinate class='axis'>
                <x-coord axis-value='2580814.0631741141'>
                  <node-reference>
                    <axis>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk]</axis>
                  </node-reference>
                </x-coord>
                <y-coord cell-offset='0.0696516'>
                  <node-reference>
                    <fields>
                      <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[usr:Calculation_688487818711408640:ok:2]</field>
                    </fields>
                    <multibucket>
                      <bucket>7</bucket>
                    </multibucket>
                  </node-reference>
                </y-coord>
                <page-reference>
                  <fields>
                    <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[tdy:date:ok]</field>
                  </fields>
                  <multibucket>
                    <bucket>#2020-01-22 00:00:00#</bucket>
                  </multibucket>
                </page-reference>
              </visual-coordinate>
            </bottom-right>
            <text x='0.5' y='0.5' />
          </annotation>
        </annotations>
      </table>
      <simple-id uuid='{1494D27A-C6B2-4F62-9263-1C717DF18B39}' />
    </worksheet>
    <worksheet name='Corona Worldwide Drift'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;  &lt;Page Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_cases' name='federated.13ef01c1kr7l2a10t4zdl1km4f3h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13ef01c1kr7l2a10t4zdl1km4f3h'>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Country Region' datatype='string' name='[country_region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country_region]' derivation='None' name='[none:country_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[Longitude (generated)]' field-type='quantitative' max='27168824.166140705' min='-12906192.51943779' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[Latitude (generated)]' field-type='quantitative' max='15622178.275148584' min='-11423826.859165676' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' field='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#649e61</color>
                <color>#74a771</color>
                <color>#86b183</color>
                <color>#99bb97</color>
                <color>#adc5ab</color>
                <color>#c2cfc1</color>
                <color>#d9d9d9</color>
                <color>#d3b2b2</color>
                <color>#ce8e8e</color>
                <color>#c96b6b</color>
                <color>#c44a4a</color>
                <color>#bf2a2a</color>
                <color>#ba0d0d</color>
              </color-palette>
            </encoding>
            <encoding attr='size' field='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk]' field-type='quantitative' max-size='1' min-size='0' type='quantsize' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='b01002_001e' value='false' />
            <format attr='enabled' id='b01002_002e' value='false' />
            <format attr='enabled' id='b01002_003e' value='false' />
            <format attr='enabled' id='dp02_0001e' value='false' />
            <format attr='enabled' id='dp02_0015e' value='false' />
            <format attr='enabled' id='dp03_0027e_plus_dp03_0029e' value='false' />
            <format attr='enabled' id='dp03_0028e' value='false' />
            <format attr='enabled' id='dp03_0030e_plus_dp03_0031e' value='false' />
            <format attr='enabled' id='dp03_0062e' value='false' />
            <format attr='enabled' id='dp03_0088e' value='false' />
            <format attr='enabled' id='dp04_0001e' value='false' />
            <format attr='enabled' id='dp04_0046e' value='false' />
            <format attr='enabled' id='dp04_0047e' value='false' />
            <format attr='enabled' id='dp04_0089e' value='false' />
            <format attr='enabled' id='dp05_0001e' value='false' />
            <format attr='enabled' id='dp05_0002e_div_dp05_0003e' value='false' />
            <format attr='enabled' id='dp05_0032e' value='false' />
            <format attr='enabled' id='dp05_0033e' value='false' />
            <format attr='enabled' id='dp05_0034e' value='false' />
            <format attr='enabled' id='dp05_0039e' value='false' />
            <format attr='enabled' id='dp05_0047e' value='false' />
            <format attr='enabled' id='dp05_0053e' value='false' />
            <format attr='enabled' id='dp05_0066e' value='false' />
            <format attr='enabled' id='dp05_0077e' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0' />
            <format attr='map-style' value='normal' />
          </style-rule>
          <style-rule element='map-data-layer'>
            <format attr='palette' value='tableau-map-blue-green-light' />
            <format attr='geo-area-type' value='State' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk]' />
              <size column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk]' />
              <lod column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:country_region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='2.2862591743469238' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[Latitude (generated)]</rows>
        <cols>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[Longitude (generated)]</cols>
        <pages>
          <column>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[mn:date:ok]</column>
        </pages>
      </table>
      <simple-id uuid='{6DBF59AF-05C3-441D-96AF-509F5109DF8E}' />
    </worksheet>
    <worksheet name='maxCases(BubbleView)'>
      <table>
        <view>
          <datasources>
            <datasource caption='covid_19_cases' name='federated.13ef01c1kr7l2a10t4zdl1km4f3h' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.13ef01c1kr7l2a10t4zdl1km4f3h'>
            <column caption='Cases' datatype='integer' name='[cases]' role='measure' type='quantitative' />
            <column caption='Country Region' datatype='string' name='[country_region]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
            <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
            <column-instance column='[date]' derivation='Month' name='[mn:date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[country_region]' derivation='None' name='[none:country_region:nk]' pivot='key' type='nominal' />
            <column-instance column='[cases]' derivation='Sum' name='[sum:cases:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[mn:date:ok]'>
            <groupfilter function='member' level='[mn:date:ok]' member='6' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[mn:date:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Circle' />
            <encodings>
              <color column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:country_region:nk]' />
              <size column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk]' />
              <text column='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:country_region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-line-first' value='true' />
                <format attr='mark-labels-line-last' value='true' />
                <format attr='mark-labels-range-min' value='true' />
                <format attr='mark-labels-range-max' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-range-scope' value='pane' />
                <format attr='mark-labels-range-field' value='' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{35D6EE24-242F-4E7C-935A-63C8F58FFC10}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Covid-19(Cases)'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource caption='covid_19_cases' name='federated.13ef01c1kr7l2a10t4zdl1km4f3h' />
      </datasources>
      <datasource-dependencies datasource='federated.13ef01c1kr7l2a10t4zdl1km4f3h'>
        <column caption='Date' datatype='date' name='[date]' role='dimension' type='ordinal' />
        <column-instance column='[date]' derivation='Day-Trunc' name='[tdy:date:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='7' param='horz' w='98400' x='800' y='1000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98000' id='5' w='65800' x='800' y='1000'>
              <zone h='61250' id='3' name='Corona Worldwide Drift' w='65800' x='800' y='37750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='36750' id='11' name='Corona Active Cases Bar Chart' w='65800' x='800' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='326' h='98000' id='6' is-fixed='true' param='vert' w='32600' x='66600' y='1000'>
              <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='9375' id='24' mode='slider' name='Corona Active Cases Bar Chart' param='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[tdy:date:ok]' values='database' w='32600' x='66600' y='1000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='375' h='47875' id='9' is-fixed='true' name='maxCases(BubbleView)' w='32600' x='66600' y='10375'>
                <layout-cache fixed-size-w='318' type-h='fixed' type-w='fixed' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='244' h='31500' id='10' is-fixed='true' name='maxCases(BubbleView)' pane-specification-id='0' param='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:country_region:nk]' w='32600' x='66600' y='58250'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='8' name='Corona Worldwide Drift' pane-specification-id='0' param='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk]' w='32600' x='66600' y='89750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='46' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='45' param='vert' w='98400' x='800' y='1000'>
                <zone _.fcp.SetMembershipControl.false...type='filter' _.fcp.SetMembershipControl.true...type-v2='filter' h='9375' id='24' mode='slider' name='Corona Active Cases Bar Chart' param='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[tdy:date:ok]' values='database' w='32600' x='66600' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='36750' id='11' is-fixed='true' name='Corona Active Cases Bar Chart' w='65800' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='47875' id='9' is-fixed='true' name='maxCases(BubbleView)' w='32600' x='66600' y='10375'>
                  <layout-cache fixed-size-w='318' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' fixed-size='244' h='31500' id='10' name='maxCases(BubbleView)' pane-specification-id='0' param='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:country_region:nk]' w='32600' x='66600' y='58250'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='61250' id='3' is-fixed='true' name='Corona Worldwide Drift' w='65800' x='800' y='37750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='8125' id='8' name='Corona Worldwide Drift' pane-specification-id='0' param='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk]' w='32600' x='66600' y='89750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{94646260-83E4-4EDC-8950-7BACB87C5350}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Corona Worldwide Drift'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk]' type='color' />
            <card pane-specification-id='0' param='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[sum:cases:qk]' type='size' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>5</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[mn:date:ok]</field>
            <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:country_region:nk]</field>
            <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CCE947AB-B9A3-4896-AF32-C4953762004E}' />
    </window>
    <window class='worksheet' name='maxCases(BubbleView)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[mn:date:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:country_region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[mn:date:ok]</field>
            <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:case_type:nk]</field>
            <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:combined_key:nk]</field>
            <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:country_region:nk]</field>
            <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:iso3:nk]</field>
            <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:people_hospitalized_cumulative_count:nk]</field>
            <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:province_state:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{24895AC8-7FA3-4E51-ADF2-E081A419280E}' />
    </window>
    <window class='worksheet' name='Corona Active Cases Bar Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='3' param='[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:country_region:nk]&#10;[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[:Measure Names]' type='color' />
            <card type='currpage' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <current-page>
          <multibucket>
            <bucket>#2020-06-04 00:00:00#</bucket>
          </multibucket>
        </current-page>
        <highlight>
          <color-one-way>
            <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[:Measure Names]</field>
            <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[mn:date:ok]</field>
            <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:case_type:nk]</field>
            <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:country_region:nk]</field>
            <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:people_hospitalized_cumulative_count:nk]</field>
            <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[yr:date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{02947FAB-63DD-464E-8976-12A96167AB68}' />
    </window>
    <window class='dashboard' maximized='true' name='Covid-19(Cases)'>
      <viewpoints>
        <viewpoint name='Corona Active Cases Bar Chart'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Corona Worldwide Drift'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='maxCases(BubbleView)'>
          <highlight>
            <color-one-way>
              <field>[federated.13ef01c1kr7l2a10t4zdl1km4f3h].[none:combined_key:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{AC056CF7-111C-4B1E-8F1B-91EEE57DDB13}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Corona Active Cases Bar Chart' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3deXAc133g8W93zw3MAWAwuAniIAjepyjKuizJkWw5kQ/ZrtyJc2+8zqa2
      tiq7tVUbV2pr/9jd2nhrdxOtk41cPmPZiWPJuiyZOijxBAGCIIj7Pue+7z72D1CyhgQokuKA
      lOZ9/iFBzPSvX7N/M7/u914/yTAMA0GoUPLt3gFBuJ1EAggVzfTeHwKBwKYENQwDSZJEnAqP
      s1mxrhXDdOU/+Hy+su4MQKFQwGKxlD1OsVjEZDKV/QAXCgXMZvOmxNmM47ZZcXRdR9M0zGZz
      WeNcqz0lCaAHx8j2/3VZdwYuN1wuf/Vl6AaqXP5PMl030DYlzuYct82KA2ufzmqZPziu1Z7S
      BEj5UUeeK+vOvBtrU6Jsns1qz0ctzmbZqD3iIlioaCIBhIp21UXwOzRNJ62Cy7qWI4ZhEMto
      mC0yim6QLBhIskStTSaW1bBZFarMa7VcIqOS08DlUNCKOkUkPFaJVE6nCHhsCqVln0GmYGA3
      S+SKBhaTRCyjYbXIVFtEjgrls0ECGAxMp3lhPs9/esQLwOhUkteDGrmMziO9dqb8eY7NFfnX
      h6sYDKpMJTT+w8drAYP/9WqA3Vur2dNi5YXzSQzD4LH9Tl66mEbRde4/WMtej/KeeDrfPZ7g
      yw+7eebtOF11MFqQaXabeXybo+wHQahcGySAxOFtTs6s5N79l2qbQjZTwFAUtjU5qCqq5Ow2
      trXasCsZlt59qUYoppM1JKR0gZotTu6VM5yKGki6TlI1cJqvfdXvsMmEwhr3dlXdmlYKwgau
      u74YDRZ4cJ+HBlklWjR4fTrHI902ZueSPLek85WjrrUXajJ/9WstbJcKvBbQKGY1gkkNU0Gl
      tr6KR1rMTEW1q7avGgaFok7WgLbWav78Yy6+fSJyyxoqCOtZ/xtA13nxfIJoRufYQo7VlTyP
      dNt5eSyB0+ugTtLwNVbjM0tMxlW0LHxvKM0ui4azwcHoTIpQUeGX9zg5P55gzLDy2W47rw4l
      uWTIPN59ZViZh7ZZ+P7ZBHt7q4lHcvx0Ps8Dvc7yHwGhoknvHQ26fPpHOE98reQFWr7IbF6m
      y6Vc+d4ShmEwHSqy1WtG2aRudEH4oDa8C/QOxWqmy/r+G5Ikia768nefC8KtJO4xChVNJIBQ
      0UpKINnVjHnfr5Y9qK7ryJs0qEvEuXPjGMbataNc5oGE12pPyUVwIBAQw6FvghgOfXPuhOHQ
      ogQSKppIAKGilVwDqKksyfBc2YOqqkre9L53YG9JHEVRyl6aqKqKSTFhcjmwt9aXNZZwa5Wc
      hdmFAJFnz96uffnQc+3rYstvP3a7d0O4AaIEEiqaSAChookEECraBglgcHF2gO8Nvs1kIs3Q
      XD/fHx8GoJCP8L9//hxBfa37YHb5Et87/zrHl1YAg9Njx/iXiXn80QW+depN4uts3R8Y5qkz
      x/hW/1us5ovX2D2DpcgSkegMx/zRD9RQQVjP+rdi1CTHl6M8ue8wbpsd1dTO2elpDMNgaHEa
      m2KhgAFIDK0uc6DzAMfGz3HApRMxLCTTOWo7OqiRJlHX2XwuF6etYTum+CSxfJyZBT82Zy2Z
      +BxhXHy82csLE8NYq5vosUootiL+vJgZJtx6638D6CpZrcC52fM8NzuF1WRBAtR8iFcXlsgX
      YywmkgB8YudhQuElQtksx8b6yWkaS4kQunztYdHz4QXSuoyupTi74Ke3tpqlVJa+2YtEFBc9
      zmoaXHUsBpfJicf3CmWyfgKY3eyttRPK5fFYFF4bOcvFxXEGYkV+bd89+OwuXCYYXFkknAyz
      EFtlV8su7u29l0P1Xjw2B5PLFzjjn+HYxCiFK05gSZJJ5ZIE0wl0ZJo8Ddj1LNPJNLV2B7Ho
      JN8fGyeeiSPLMpIkiTkGQlmUjAWaeuMs2evsB0imA0ykDA40NCBOzTXl7gcQY4FuznU/GvFG
      OKt8HBRz1oUPOXEbVKhoIgGEilZSAkmKguKwlT2ogYG0KVcOa7dqNyuOYhVzoj9sShKguqeV
      zvsOlj2omBAj3ClECSRUNJEAQkUTCSBUtJJrgImxUf7mf/z327Uvm+Kuo/fw6c9+7nbvhnCH
      KF0iSdMp5PO3a182haquNzxPqFSiBBIqmkgAoaJdMwFmZydJ5VUMXWN6ZoZMUSMWWubS9CL6
      5TF0hXSM/gtDDE8vkkmEuXBxmGAiSzGb5OKlESLpq0uqXCrC4NAQU0tBdDHUWbiNNkyATGSB
      qcUgkYxKIrzM1Pwq8UyS8fkwjeYkwyspAKKhRVzN3ezsaEE22+nt6eDS6Cijk+M0tzQzfGmM
      K5fDyERXqGropBBdIpDKkssVKebyqJpGLBohmc1TyGUIRaLkMklmV4PkMilC0TiqyBjhFlo3
      AQy9yPhiku4WDxhFZleSbGl0Y+g5zLKT2roa0tG1CTGyYiEwN8r58XkUSePS8DAuTz01zmrG
      xiewO93rBlmanyaW07HJGaamgvinZlmNLNN/cYJYKsPY0AXmVgJkc1ni6QzB5TlOnzrOpD9Z
      zuMhVJh1E0ArFoACk7MLrKysUtQLzM4vEogUUfUYi8sBPF43+UIRq9PHrm0dJOIhcnmNju4e
      MokAoXiKzs4O9FQCdZ0P7boaDyBjkmXyuTSJdBaL3UVbo5upuQWa2rdgJPysJtZKqKVIjB0d
      TRQ1cRdHuHXWnQ9gslaxf+9+spkkhsmBw6KQTiUx2RwUU3ZCGYOO6gJjsyG2tXhYCkTZs3MX
      spbGH0ywc8cuqpUiCyshenb2cOWaeNXeNjrkKpQGF3nDSqPPAqYanGYzaZOVXdtaMRXTeJo6
      aW3ykld1dLeVVMGgvaZ6M46LUCGuOSHG7vjFGl1V1Wt/t3q8VHtA11R2drkxKTLdHe7Lr7LR
      7a67/HcrnR3rn6wWuwsLgNWNDXA72t/9XUdHx+W/VePxXt6qFahyUHNDTROE93fTM8JkxSTu
      oQofeuIcFiqaSAChopU8FWJ2Zga1WCh7UFVVMW3C49E1VUNRlJJJYW63h/qGhlsaR6wQc3Pu
      uKdCOKqq8Pk61n3hZu3QrbRZM8KEDy9RAgkVTSSAUNFKSqCEP8ry25NlD6rpOsp1LsPZdqCL
      uq23tmYXhHeULpEUyzDXV/4EuBE1bfUiAYSyESWQUNFEAggVbcMVYlS1QDqfRTMMVDVPOp9D
      NwzyhSzpfI53ug8MQyebz1DUdQrFHKlcmkwhj6arpHNZtHXG7+u6iqobl//Ur39vDY3c5RVl
      Crm1/cnlfrEv15LP5RAzCYQrrd8bZRS5MHGOUDqKs3470cUhJJOMt/UuzKkZlsPLNPZ8koPe
      ahYX+ugPpJBMLg7UO5iJrDC4muSQr4qMYUauauShbb0lDyhcnX+bFfsBtmhjTGltHG1rXPuF
      VmAiEMAlR8lX9bKl+ooOkvQMTz09xp9/9dM89/VvsOv3PsVLP+7j8SNb8fbeQ61944b+3VPf
      4Hf+/M9wbvwSoQJt0B1r5kDv3Zy78DKyyY7NLBPOq2yx2nAaVYz5Tex1WAGYW4py/92Pcrzv
      ZRpaPome8WPadR+S/ww5DYKL8xS39bJRt5ehq/z05DOgS/T0PsxCLIgaPMuCJcGjrbVc+OEE
      ncufpN2Y4tzsIrHCLgB0PczffP2b/OGf/gVLb/yEvJTj/701SjGd4be++CjfeuZlErrMV598
      kO8/+yYjM0Hu6z/GsTcu4GzdQaO6yHwsRSKtYcRj/MZf/BXtYqR1xdmgBNJ4o+95bM1HOdhg
      J6bV8omebuYjIRoadvLgllqGA2uL1lktkMnnUQ1QtAxnQwXuaqrjyN7HeHTXQaodFpQrtm5S
      zGSLebL5IiZFAYuLo+0NBNMZErk83S2dHO4+wNz8EDFVQpY0jk+H+Fe/+yQu61rOynIdn3ho
      JyNjcyTCYbKZBC17HmRnKwy8/iyHP/8Vmt0wPvQWRz7zZfZ11TM6eoEnfvOPMSZGWEip/NKn
      H6e2qZGH9zjwJ8p4lIU71gaL5GWJFiA7349i7KLDA6eWIuzq3E3/yAliqs6eTonjo0Ps79nD
      ieG36GzdSyEbo6N1JyZJYiU4zoXlFQ71HL4qAbyNexm5dIYRqjjaW4tSbMJqt1JvOLDoXnw1
      TQxPD3JX90H8ioLL7eKX9nbw7R8fp7VjPwBtO3roePBeXnv2VXxdPdR6fbRrbqxKL/VNW/jn
      Z/+eSwurfOHx3+bZ53+A5Grg6N07eflHT9N034PUqmGcDidd7e14TVVwjfJJ+OgqGQw3dHyA
      6ZeGruuN2WyMlGbBW+0o6wPI93/uHtoPb7uh9xRii3z7medp3nk3j31sH7L80Xg6tBgMd3PK
      skSS3e65Yz80LZ5Wfv+P/phisYgYBydci+gHECqaSAChopWUQHaPg/bD3WUPeiOD4aq9rjLv
      jVDJShLA1VBD957tZQ+6WRdZgvB+RAkkVDSRAEJFK50Qk8mzMrla9qDrTYqvddlp87k3eIcg
      lEfpEkkLYZ56cfS27Mgjhzr4syfvvi2xhcolSiChookEECqaSAChom0wFkglNH6GZCJJTedR
      XE6ZqZOv0Hz4U6TnT5NMqrTsexibRUZNr7JwaQBbfQ/eWguL48M4GnbgsuZYmZ/B2bKX+qbm
      kq0XonMsz4xjdjbT1L2Lq8eqGcxNjVHf1oPDInJUKJ8NZoTJuNsPYgsOEQ0HIBZCN9sp5IOk
      UxbaO2uYn1uic1sbkfHTVG+9H4+7itClF3G334/LU8Xy0Ku07P44yxfOUNvYjPKekzy9OoW5
      rgdfYwP50CjhQJRFn4nVSQvPHevjnsc+R255Houi8+y5UYqKi19/4hGUMo/qFCrP+gkgSWRW
      h4gkdFq7axh7ewCbVSebiCJJFhSLDb2wtnJLMVtADY0THAtTbcpTCIwTHI9isa09Ql0ydAyD
      kudzerbfhzY9wMzAGLXODLbmx/l5/1m+uEshm1jkez98k/3uKaxGgrB7H/mxn5JXH8JhuXJm
      gSB8MOvXF8UY0wNnMApxErEs7fs/hsliw2xrQNLmmDx/Hm9LA9HleTydveTjERSLg5q2Hoqp
      GLK1GpfHw+y5nyG5G1GuiJJeHSMRjwASGDqBkddp89QxOzyM7KrBLssggSRJ2Gy2TXmQrlCZ
      SibEvHj8/HX3AxRTKySSOrVNLR9oQkxy5jV030N8/oFb3w+wWQ/HFRNibs6HekKMubqJulsw
      idzZ8dAH34gg3CRxi0WoaCIBhIpWUgLJsozdUv4LzituCgFgMYk7PMLmKznbD2xr5LF795Y9
      qJgQI9wpRAkkVDSRAEJFK10gIxlnZnW27EFVVcP0nprfYq+iZduusscVhCuVJEB4aY7zz393
      03fC27pVJIBwW4gSSKhoIgGEiiYSQKhoG64PMDQyyStnh5kKJRkameSl00PMx3IUs0l++EIf
      0ctLHyWiQV4+fZEz0yFikTA/fnuYjG6wsrLMsXOXODnlv2ppolR4hdMLMULRKHntvb8t8tMf
      fYdUoSxtFYSrrJ8AhsyOnk52NDgIxvN0tTfTWG0mVVCZXAzitFtRL790YjLAoUO7iIRXqfbU
      UGOT0QGf10tPk4dMtnBVAmjFPNFMhtfPDPDzkUWW56b5xlN/y+BslFDAz6UTrzAfL3D8+HGx
      rpdQVusngASzs7PMZi0c2FpHIZ9HNSTymTh9MyFSmQT+SAYAwwBZujy0QZbf3aCua8SzRcyw
      7kmsKBY6Wnwc7W4mFEmSTS7yL8/1AVBbZ+PVn/yAyYBW1rUHBGGDCTFZTo6vks8kmQ9GGFsM
      EknnsdicPPGx3bTWeqhxyIwvhtjS7uHk2YtYqmoILC0ytRqib3SR6eUAgVgGdZ0zWJIVzIpE
      tdXM2cklIvEUjlofbrsFm92Or+sQqyP9HDqyr8zNFypdyYSY/jdfve5+gGw6wXIaOn2uD/wp
      7W3dyhNf/ct3fw5MnuH5vhC//sXHsX6AMXJiQsydHedDPSHGXuWiq+qm9+mafN1H+HL5n9Iu
      COI2qFDZRAIIFa2kBFLMZqo9dWUPamAgvefKwe70lD2mIKynJAGaunaw754Hyx5UTIgR7hSi
      BBIqmkgAoaKJBBAqWsk1wLmxFf7v149t6g6YTQo//KsvbmpMQXjHFR1hxqYPPntPR7QgbDpR
      AgkVTSSAUNE2SACD9OoIc0MnyeULJJeHmB86RaGgkovMMDf4Jrn82oyAxMIAM/0/Y2Z4AL2Y
      xj85hGYYa68beI14LH5VWaWmV4hFY1dFzUSXGB1fpVAUM2KEzbHBhBgVXa7B57PjnxkHs5c6
      j87q/AQLI4O07DqK+fKSL662A2zZ3otWUClmE8RWZ9EMA9leR3PPTvwTA1cnQHKecChMPhEk
      HpgjmMgRD8zz9huv0ndhgVeOvUw2EaL/bB/+WKbMh0CoZBtMiDFjsxVZml3B29aNxZRjZSVF
      nc9BPpZkoe95IrHU5RcbhGdGqW3fjtXVhM221sMr61kWh09g8zRtMFxaZXXobbJpP8988yf8
      w3eeQ7+cKhNjw0SXxvn+t/+e//aN793yRgvCO9ZPAC3FxOk3qe/ai0lOM3X6ON6O3ZhMHqp9
      XmqaG8mEIxQyafR8jERKwl3jpJiJks8kyMQj5HNFvFv3UYyuom8U3OTA1dCKnEpR1BWqHfZ3
      f9fXd5IHP/ObOOVEGZotCGs2mA9gpmnHQQrJCIqpkcYdhyimwphsbpp3HCIZTdLYbME/P01L
      Vyctu46iSFDIJahp60XLpLFWW8im8jTvPsKVc1osNb00uUzIPi9Wm4tf+c1PIhdXmQ3leXj/
      NtR8PTU2haHpML/xpSfLfhCEyrV+AihWalp3/OJnT/17fllFXbUPQ1dp2daErMjYL0/osde2
      Y6/9xSvt7qZ1Ny9b3Tgub0uRZVq31AP1NHe98wo3AB+rb7vxFgnCDbjpGWGSbBIT1oUPPdEP
      IFQ0kQBCRSspgXrbvfzXP/lE2YMWVRXz5bV/y/0kBUG4lpIEqLJZ6PB5yx5UzAgT7hSiBBIq
      mkgAoaKVlEDT4RBPXzhf1oD/7uHyX2MIwvUqXSIpneaNqYmyBvy3Dz1S1u0Lwo0QJZBQ0UQC
      CBVtwwQw1CLFbA4ALZchl0hh6AZqJkU+lX13Lq+hFshFo+STGQxDp5CIU8gW0IsFcvEEunb1
      WFA1n2ZpcRF/MLbhSFFB2AwbjAXSiU9NEphdpOexB1g89iaKQ8HUsIXs7DJmi4rz0IO4PRbS
      UwMsL0vUtjdjXQkSXi3g2tpGYX4C3eJAt7ho2b+9ZNzQ7Ikf8E/jVTxweD919R7xNSTcNhsk
      gIxn+w6iSwtgKChWyKXy1HQ4yBQzGIpKeDaIe38LxWQcPWtBsdpIjM+B3YdhyEiyRiGdJruY
      Qt+//aoh0ZHAMuF0L99+6q+Rato41NXIy6+8jnffw2jTJ5BMoLbcR63/JKtqA0f2uHntrUEa
      e+7ndz53f9kPjFAZ3v/DV01RUD207e8kFdPY+vhjeBo82DzVADh3P0DPo3fjP3cWk8tF3d4D
      xC8MUnPkAdru2oPZZV131OijT36Zz3/iLjJJlV/+wheYGhnE6jAxNDFDRrXwpS/+MqHQKitZ
      iT/6/S8x/vpraFU+PG7RgyzcOut/A2h5AufOo2aKhJayuBtN+GfiePe0Ex48S06toWkbLJ0b
      pqbRQWh6idre3dQ02PEP9VPdu4viygyrs0EaDuy7Kstczdtp9dgA2HngIFUKdHV1EjOi3Ltl
      Gx41gcnq5kBvN/U5iae/9c88/IUvkXylD3uVs8yHRKgkJUskPd93lv9z7sx1vVHNJFA1C1an
      7YbmBfzkD/4EQ9M2ZSyQWCLpzo7zoV4iyeRw3fybBeEOIW7ACBVNJIBQ0UqqmAani8/s2VvW
      gLIkoZU1giBcv5IE2FJTw+Ht28seVCSAcKcQJZBQ0UQCCBWtpATS4nEyc/NlC2bbuQO5qkzL
      ywvCTShJgML0DKGnv1m2YA3/5T9j7ews2/YF4UaJEkioaCIBhIomEkCoaBtOiBkKrNKXLvDl
      ji38bGaShYLBva1b6TSrfH1wkt85vJcGSQIM+hYmuYCHI5Y8A8k0SwWJzzW4OBWJ46mu44km
      b8mAOT0X4Zv/8E/kZTMPPP6r7Gh1bUZbBeEqGySAxPa6Bk7HRgGNlTzscZqZzOSIFWI4TWYK
      BiBBJpdisWCQUTR2N7TSYFnk5bSDrR43TQ4H314IoTV5SwKd++mPaTz6BPu9KjaPmdOv/DPD
      IRO/8tAezp8ZwdHaQmCkn0DeSmNVAee2+9jCEj8/O8kjT3yWqf7jrK762Xn3vaiqla3VKVKu
      Hrb5xB0m4cZsUAJJWBRl7VNbNzBJ4C9oSMU0L/ijpIppZtNZAI7NTRM3DObiSfKGzkurCT7Z
      VEMqE+OZhSCfbd9yVZblcxo2m8Kp5/+OF46/ztNP/4zloeMMTkwzMJ5id7uD1YyNmtUVdn78
      Pk4PDDE9M01y5QI/Pj7E4MQKn7mvk9cuRek7+RbH3zxLjdtRzuMkfEStnwC6yqtzMwxGohyP
      JlG1IoFcAZvFwR9t30a7o4o6s0RfKMI97dt4pM5No8NONhtDtbmpk+G5uWkyusr5UBT1is0f
      evTjnPjRNxkLgLe+ne5uN3Xt26lz2Oja1oVFkXE47FhsVTjsVmwWC5PTU7hrfVgtJuxV1Vis
      VmxVdRxpVJm3bcVrFQ/ZFW5cyYSYuZd/hnSd/QCJbJLxnMGhGtd1T4h5px/gVk240LIxvved
      73Lfk39AR631qt+LCTF3dpwP9YQYl93JYfv7v66cFLuH3/rDr9zenRA+1MRtUKGiiQQQKlpJ
      CSSZTcgeT9mCScqVTwcShNurJAFsu3fje/jh27UvgrDpRAkkVDSRAEJFEwkgVLSSa4DF8SFe
      /J8/KFuwT//pf8Tb0l627QvCjSrtCNMNNLVYvmi/6HQWhDuCKIGEiiYSQKhoGySAQTadZGQp
      DBj4/aucGFkgq2pMzszy1qV5CvpaOaNrRUbmV8gWdTKpBCcuTBLJaeQzKU4MTbKaLHBl4RNf
      GuEbT/0tLx4/jybKIuE22jABIqkisytLQJGBqQgd1UX65mM0NDTSbknT71+bD5BJZ5gLhkkV
      VQYuzdPb08qpoQn6xmfp2tLAmeGpq54EFxw/SdvRz5Ecf5PhpTBjw0P4oyniwQCLi8tEQiHy
      mk4kHC1r4wVhwyWSWhpqubS4CIZCtblA31yO3h2NJKIh+pezHD60Nry02uWmzr4KyHS21jI4
      Ok84laOz3cm50RmqXHVXLY8E8OaL/4TbpFH9+j/yj6+dx+HbyQNVYYoHP82W+Aitv/JrnHr2
      ZX7ry79atsYLwvrfAIZOIpkmnSuQzKRIqHb2ballMRJHMjs52OZkMpgmkyuQy+VIZvPE0jmc
      bjc7W9zUuqqJxDPs7GxFS6UorlPl3PXgp/g3X/0KdSZ4+Au/x5/+9mewV3v5+IP34DCrzE5M
      EUkVytx8odJtkAAGoViczsZGogUT9/TWk8LBPR31qMUMCcXDwTo4Pxskk8ng9dSSz2bRdZVQ
      2uChfZ0c3tFFJp3j0O4OLFfME2ne+yj37W7BbrNw1+d/l25LioIhc89nPovPJrH7occxp1M8
      /mkxLkkor5IZYf1vvsr55797XW/UNQ0dCZNy/TeSnvjqX+Jt3bppM47EjLA7O86HekaYrCji
      HqrwoSfOYaGiiQQQKlpJCVS/pYtP/fG/L1swd31j2bYtCDejJAGsjip8vo7btS+CsOlK1wco
      FAgEAmUPqmkayibMD9Z1HVkuf5W3We35qMUxDAPDMMr+f3St9pQkgMViwefzlXVnYO32ZLlv
      fQGoqoqiKGW/PblZcTbruG1WHMMw0DQNk6m8S65fqz235SK43CfKZsfZLB/F47YZsa4Vo7yp
      t1HQMmf8Ozbjaxw2rz0ftTiSJG3K/9G12iNugwoVTfna1772tXd+SKfT5CJLnOq7gOGoQQ37
      kV0OJkan8dbXXfdDcN+Ri/k5dbafmZUYPpfC6ZNnCGbAa9c4cfIUoZSBLZug6K5mZnSCmro6
      5Jv8SjTUDG+89AZ13VuYOHeakeklvA2NTA6e4OLkMnVeL6FQACMRIKQ7cNlu4lPO0Ji6OMDF
      iTk83nrG+08zOreKr7GR0f63uDS1ireulnA0QjG2StSownkTcYxiloG+04zPLOKuq2Ps3CnG
      FoI0NPq41HecSzNB6mvdhBNx8pFlkpKTauuNfZImQ0sMXhzF5W0hF57l5Jlz5GUXcnqFU+cG
      Uc0ujPgiJ89dQLLVkIgEcFWZGJlaor6u5rrjaGqOsf5TxKQanKY8A2fPMDG3Ql2di3OnTrIY
      StNQZ+fUW2+zFM1T44REAkJLE8hOL1bl+s6HqH+ewUuTeBuaMckGk+ePs1r0YMRmOT1wEdlR
      QzYwxZmBYSzOeqJBPy6HfHUCLAVCHLn7IAtTc5i1HEtBP96WTpy2G78okkwWmltbSUdDqIUU
      jdsPofvnCGSzdO/YjxZfJJ9WCWUi2KoaqHU5uKnz3zCYnxwnl9Vw1VpIUsN2XxWh2DIpvYn9
      bWZmEzLZ8ByBjIme9qabilNMx5gOZdizqxdLLkTE3EhXjZlYepWU3sK+ZoPZpIVsZI5gxsK2
      LQ03FUfNxFlNQ1udlXQ4jOrtpqPaIJYLkqWNPfV5ZlJ2cvF5whkrXW2+G46jmG3Iagq52svK
      7Bx7jtzNyuw4uYzK3sMHWJ6bI5nJcveRfczPrqAW0kSDIerbOnFYrz+pJUnGbTMIF+343A58
      za2YinFCwRT1PTuxazFiiyvU7D6KKbaCVGUiNLdEzlpLq+/6nzxuttpR80mqPPUU4ysEkkny
      upNsMsGhQ7uYm1shnc1y9127mZnxo+aTBFaDV5dAsqygyGYkNIr5FCuhBDbLzdaEGrPjEzR3
      9mAy1moxs0miaEiYFQWTIqNpeZaWglhslps7+YF8MsDYXJBsMkwwmMBsMWMymQyeLDMAAAMX
      SURBVNHVPIrFisVsQlU1wivLqCYz8k3G0VWdTDLIpaFBxmf8mC1mzCYTmppHsdiwWEwUVZXg
      8hK62XLTcZBNyIUky8EUEjoWqxmzoqAVC5gsVqxWE4WiSmBxCcNqvak4JrMF5fIbDUnBLCtI
      EkiyCUVRkDGQFBOyYkI2NIrZBP5oBov5xr5pJEnGYl47fyR0FmanMNW0U+tQsJoVTIpCsWBg
      tSpYJAlVL7K0tILVZruhiuOd9hi6yuCFi2jFAsFAAEMxoZhMSMZaexTFjKRr5FMRQsnC1d8A
      Si7K2cERqho6cMrQva+XyYsT+JoabvhAh6YG6JsKk44laWit4fzpPlKKk13NLk6dPUdar6LJ
      aaNt/x5WRkapbWzEdBP/m5JswuVykovHqd3Whf/SINOrYTq27yMwdobRhQTd27Ziq6rGp2Tx
      Fx3UVl+9nsD7UcwKMb+fZLZA/ZatBMaHmAnG6Nq+j6XhE4wtpenpbsfu8lBnJAjrVXiqbnxU
      pVbIMDUzSy5XoK5tK0vDA8xF0mzbvpv5oROMreTY2d2Go7YOVz5CQnLidtxYnODcGGcGBllJ
      6HTWSpw+dwGLp4VaS5q+wUvY61rxkODchVGqfO1YTSb27dzK8Ng8zY31131yFvNxzrx1kvEF
      PxapyPDoNOlMmoamei709RPN6OzYtYVzx08S1c1sbaqh1ttFLjyF7PJhN1/fZery1DB954cI
      50zs3t6BVc6TVD3UmaL0XxzH3diOLReg/+I4tW1dmBWFfb0tpcOhA4HApvQDCMKdQtwFEiqa
      SAChot2WjjBBuFI+FeSlF3+OydXGI4/di22T4ooEEO4ABoMnXqNp/8Mc6qglujTOi6cusfPu
      +7HEJhiYS3JkVzt9A6Psv/cBomNnWFWdPPzAPdxg98dVRAkk3BFyhTzVVQ4Uk4mIf4VMOszP
      XjvO8MVL2OxWnv3hD0gkw5w8d4bhkXlsZhO6/sEfqiYSQLgDSOzae4ATLzzDcy+8wej0OJir
      sZg16mpquHjqbew2N7rJQWdTI26PnbfffotE7soVqG/c/wcc34lFfnTM9QAAAABJRU5ErkJg
      gg==
    </thumbnail>
    <thumbnail height='192' name='Corona Worldwide Drift' width='192'>
      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
      naU2AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Covid-19(Cases)' width='192'>
      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
      teUAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='maxCases(BubbleView)' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
